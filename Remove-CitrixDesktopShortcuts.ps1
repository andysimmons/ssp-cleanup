<#	
.NOTES
	Name:    Remove-CitrixDesktopShortcuts.ps1
	Author:  Andy Simmons
	Version: 1.0
	URL:     https://github.com/andysimmons/ssp-cleanup
	
.SYNOPSIS
	Removes desktop shortcuts generated by the Citrix Self Service Plugin.

.DESCRIPTION
	This script was written to work around a bug where the Citrix Self
	Service Plugin (SSP) creates shortcuts on a user's desktop, and RES 
	Workspace Manager then saves the SSP shortcuts in their persistent profile.

	At logoff, RES WM performs its final profile sync, and then Citrix SSP removes
	the shortcuts from the desktop, resulting in duplicate shortcuts that accumulate
	with each successive logon.

	This script can be invoked at logon to remove the leftover shortcuts before
	SSP creates additional copies of them.

.EXAMPLE
	Remove-CitrixDesktopShortcuts.ps1

	Deletes any .lnk files in the user's desktop directory that were generated
	by the Citrix SSP plugin.

.EXAMPLE
	Remove-CitrixDesktopShortcuts.ps1 -WhatIf

	Shows which shortcut files would be deleted, but doesn't actually remove them.
#>
[CmdletBinding(SupportsShouldProcess, ConfirmImpact = 'Medium')]
param()

[regex]$stupidTargetPattern   = 'Citrix.*ICA.*SelfServicePlugin'
[IO.DirectoryInfo]$desktopDir = [Environment]::GetFolderPath('DesktopDirectory')

if ($desktopDir.Exists)
{
	# Populate an array with any .lnk files in the current user's desktop directory.
	try   { [IO.FileInfo[]]$lnkFiles = Get-ChildItem -Path $desktopDir -Filter '*.lnk' -ErrorAction Stop }
	catch { throw $_ }
	
	# If we have anything in our array, instantiate a WSH shell. There's no .Net class to handle
	# shortcuts natively, so we need WSH to "create" shortcuts (COM objects) from the files.
	if ($lnkFiles) { $wshShell = New-Object -ComObject WScript.Shell }
	else           { exit }

	foreach ($lnkFile in $lnkFiles)
	{
		try   { $shortcut = $wshShell.CreateShortcut($lnkFile.FullName) }
		catch
		{
			Write-Error -Message $_.Exception.Message -Category $_.CategoryInfo
			$shortcut = $null
			continue
		}
		
		if ($shortcut.TargetPath -match $stupidTargetPattern)
		{
			if ($PSCmdlet.ShouldProcess($lnkFile, 'Delete'))
			{
				$lnkFile.Delete()	
			}
		}
	}
}
