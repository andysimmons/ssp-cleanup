<#	
.NOTES
    Name:    Remove-CitrixDesktopShortcuts.ps1
    Author:  Andy Simmons
    Version: 1.0.1
    URL:     https://github.com/andysimmons/ssp-cleanup
    
.SYNOPSIS
    Removes desktop shortcuts generated by the Citrix Self Service Plugin.

.DESCRIPTION
    This script was written to work around a bug where the Citrix Self
    Service Plugin (SSP) creates shortcuts on a user's desktop, and RES 
    Workspace Manager then saves the SSP shortcuts in their persistent profile.

    At logoff, RES WM performs its final profile sync, and then Citrix SSP removes
    the shortcuts from the desktop, resulting in duplicate shortcuts that accumulate
    with each successive logon.

    This script can be invoked at logon to remove the leftover shortcuts before
    SSP creates additional copies of them.

.PARAMETER StupidTargetPattern
    Regular expression used to determine (by target path) if a shortcut was created
    by the Citrix Self-Service Plugin.

.PARAMETER ShortcutPath
    Directory to be searched (non-recursively) and purged of SSP shortcuts.
    
.EXAMPLE
    Remove-CitrixDesktopShortcuts.ps1

    Deletes any .lnk files in the user's desktop directory that were generated
    by the Citrix SSP plugin.

.EXAMPLE
    Remove-CitrixDesktopShortcuts.ps1 -WhatIf

    Shows which shortcut files would be deleted, but doesn't actually remove them.
#>
[CmdletBinding(SupportsShouldProcess, ConfirmImpact = 'Medium')]
param (
    [regex]
    $StupidTargetPattern = 'Citrix.*ICA.*SelfServicePlugin',

    [IO.DirectoryInfo]
    $ShortcutPath = [Environment]::GetFolderPath('DesktopDirectory')
)

if (-not $ShortcutPath.Exists)
{
    Write-Error -Message "No such directory: '${ShortcutPath}'" -Category ObjectNotFound
    exit 1
}

[IO.FileInfo[]]$lnkFiles = Get-ChildItem -Path $ShortcutPath -Filter '*.lnk' -ErrorAction Stop
Write-Verbose "Found $($lnkFiles.Length) '.lnk' files in '${ShortcutPath}'"

if (-not $lnkFiles) { exit }

# Spawn a WSH shell (.Net doesn't have a native shortcut handler).
$wshShell = New-Object -ComObject WScript.Shell 

foreach ($lnkFile in $lnkFiles)
{
    try 
    {
        # Create a shortcut (COM object) from each file. 
        $shortcut = $wshShell.CreateShortcut($lnkFile.FullName) 
    }
    catch
    {
        Write-Error -Message $_.Exception.Message -Category $_.CategoryInfo
        $shortcut = $null
        continue
    }

    if ($shortcut.TargetPath -match $StupidTargetPattern)
    {
        Write-Verbose "SSP Shortcut: '$($lnkFile.BaseName)' -> '$($shortcut.TargetPath)'"
        if ($PSCmdlet.ShouldProcess($lnkFile, 'Delete'))
        {
            $lnkFile.Delete()	
        }
    }
}
